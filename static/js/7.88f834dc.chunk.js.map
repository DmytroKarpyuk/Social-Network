{"version":3,"sources":["components/Login/LoginForm.module.css","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/common/Fields/FieldElement.jsx","components/common/Fields/Fields.module.css"],"names":["module","exports","LoginForm","onSubmitLogin","errors","validate","Yup","email","required","password","min","max","initialValues","rememberMe","onSubmit","validationSchema","className","styles","FieldElement","name","placeholder","component","type","length","map","e","error","Login","logInUser","isAuth","to","values","connect","state","auth","props","useField","field","meta","touched","is_invalid","error_message"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,+B,mICmCfC,EA9BU,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,OAChCC,EAAWC,IAAW,CACxBC,MAAOD,MACFC,MAAM,iBACNC,SAAS,YACdC,SAAUH,MACLI,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAElB,OACI,cAAC,IAAD,CAAQI,cAAe,CAACL,MAAO,GAAIE,SAAU,GAAII,YAAY,GAAQC,SAAUX,EAAeY,iBAAkBV,EAAhH,SACI,eAAC,IAAD,CAAMW,UAAWC,IAAOf,UAAxB,UACI,8BACI,cAACgB,EAAA,EAAD,CAAcC,KAAK,QAAQC,YAAY,QAAQC,UAAU,YAE7D,8BACI,cAACH,EAAA,EAAD,CAAcC,KAAK,WAAWC,YAAY,WAAWC,UAAU,QAAQC,KAAK,eAEhF,gCACI,cAACJ,EAAA,EAAD,CAAcC,KAAK,aAAaE,UAAU,QAAQC,KAAK,aAD3D,iBAIClB,EAAOmB,OAAS,EAAInB,EAAOoB,KAAI,SAAAC,GAAC,OAAI,qBAAKT,UAAWC,IAAOS,MAAvB,SAA+BD,OAAY,KAChF,wBAAQH,KAAK,SAAb,0B,yBCXDK,EAfD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,OAAQzB,EAAY,EAAZA,OAK/B,OAAIyB,EAAe,cAAC,IAAD,CAAUC,GAAG,aAG5B,sBAAKd,UAAWC,IAAOU,MAAvB,UACI,uCACA,cAAC,EAAD,CAAWxB,cATG,SAAC4B,GACnBH,EAAUG,EAAOxB,MAAOwB,EAAOtB,SAAUsB,EAAOlB,aAQHT,OAAQA,Q,QCL9C4B,uBALS,SAACC,GAAD,MAAY,CAChCJ,OAAQI,EAAMC,KAAKL,OACnBzB,OAAQ6B,EAAMC,KAAK9B,UAGiB,CAACwB,eAA1BI,CAAsCL,I,0FCUtCT,IAfM,SAAAiB,GACjB,MAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACI,qCACI,cAAC,IAAD,uCAAWD,GAAWF,GAAtB,IACOnB,UAAWsB,EAAKC,SAAWD,EAAKZ,MAAQT,IAAOuB,WAAa,KAC5DpB,YAAae,EAAMf,YACnBC,UAAWc,EAAMd,UACjBC,KAAMa,EAAMb,QAEnB,cAAC,IAAD,CAAcH,KAAMkB,EAAMlB,KAAMH,UAAWC,IAAOwB,cAAepB,UAAU,a,mBCbvFrB,EAAOC,QAAU,CAAC,WAAa,2BAA2B,cAAgB","file":"static/js/7.88f834dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"LoginForm_LoginForm__3bDzH\"};","import {Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport * as Yup from \"yup\";\r\nimport FieldElement from '../common/Fields/FieldElement';\r\nimport styles from './LoginForm.module.css';\r\n\r\nexport const LoginForm = ({onSubmitLogin, errors}) => {\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Required'),\r\n        password: Yup.string()\r\n            .min(2, 'Too Short!')\r\n            .max(20, 'Too Long!')\r\n            .required('Required'),\r\n    });\r\n    return (\r\n        <Formik initialValues={{email: '', password: '', rememberMe: false}} onSubmit={onSubmitLogin} validationSchema={validate}>\r\n            <Form className={styles.LoginForm}>\r\n                <div>\r\n                    <FieldElement name='email' placeholder='Email' component='input'/>\r\n                </div>\r\n                <div>\r\n                    <FieldElement name='password' placeholder='Password' component='input' type='password'/>\r\n                </div>\r\n                <div>\r\n                    <FieldElement name='rememberMe' component='input' type='checkbox'/>\r\n                    Remember me\r\n                </div>\r\n                {errors.length > 0 ? errors.map(e => <div className={styles.error}>{e}</div>) : null}\r\n                <button type='submit'>Submit</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","import LoginForm from './LoginForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport styles from './Login.module.css';\r\n\r\nconst Login = ({logInUser, isAuth, errors}) => {\r\n    const onSubmitLogin = (values) => {\r\n        logInUser(values.email, values.password, values.rememberMe);\r\n    };\r\n\r\n    if (isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div className={styles.Login}>\r\n            <h2>Login</h2>\r\n            <LoginForm onSubmitLogin={onSubmitLogin} errors={errors}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {logInUser} from \"../../redux/reducers/auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    errors: state.auth.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {logInUser})(Login);","import {ErrorMessage, Field, useField} from \"formik\";\r\nimport React from \"react\";\r\nimport styles from './Fields.module.css';\r\n\r\nconst FieldElement = props => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            <Field {...field} {...props}\r\n                   className={meta.touched && meta.error ? styles.is_invalid : null}\r\n                   placeholder={props.placeholder}\r\n                   component={props.component}\r\n                   type={props.type}\r\n            />\r\n            <ErrorMessage name={field.name} className={styles.error_message} component='div'/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FieldElement;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"is_invalid\":\"Fields_is_invalid__2daNH\",\"error_message\":\"Fields_error_message__1Foy8\"};"],"sourceRoot":""}
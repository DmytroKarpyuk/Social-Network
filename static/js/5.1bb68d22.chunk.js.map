{"version":3,"sources":["components/Content/Dialogs/Dialogs.module.css","components/Content/Dialogs/Dialog/Dialog.module.css","components/Content/Dialogs/Dialog/Dialog.jsx","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/DialogForm.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx","components/common/Fields/FieldElement.jsx","components/common/Fields/Fields.module.css"],"names":["module","exports","Dialog","props","path","id","className","styles","dialog","to","activeClassName","active","name","Message","message","DialogForm","validate","Yup","newMessageBody","max","initialValues","onSubmit","addNewMessage","validationSchema","FieldElement","component","placeholder","send_btn","type","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","values","sendMessage","compose","connect","state","useField","field","meta","touched","error","is_invalid","error_message"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,4B,oBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,iHCY5CC,EATA,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWC,IAAOC,OAAvB,SACI,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAOI,OAA3C,SAAoDR,EAAMS,U,kBCHvDC,EAFC,SAACV,GAAD,OAAW,qBAAKG,UAAWC,IAAOO,QAAvB,SAAiCX,EAAMW,W,2CCoBnDC,EAjBI,SAAAZ,GACf,IAAMa,EAAWC,IAAW,CACxBC,eAAgBD,MACXE,IAAI,GAAI,eAEjB,OACI,cAAC,IAAD,CAAQC,cAAe,CAACF,eAAgB,IAAKG,SAAUlB,EAAMmB,cAAeC,iBAAkBP,EAA9F,SACI,eAAC,IAAD,WACI,cAACQ,EAAA,EAAD,CAAcZ,KAAK,iBAAiBa,UAAU,WAAWC,YAAY,4BACrE,8BACI,wBAAQpB,UAAWC,IAAOoB,SAAUC,KAAK,SAAzC,0BCgBLC,EA1BC,SAAC1B,GAEb,IAAI2B,EAAkB3B,EAAM4B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAQtB,KAAMsB,EAAEtB,KAAiBP,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAClF8B,EAAmBhC,EAAM4B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAEhC,OAM/F,OACI,sBAAKC,UAAWC,IAAOsB,QAAvB,UACI,8BACKC,IAEL,gCACI,qBAAKxB,UAAWC,IAAO6B,SAAvB,SACKD,IAEL,8BACI,cAAC,EAAD,CAAYb,cAdN,SAACgB,GACnBnC,EAAMoC,YAAYD,EAAOpB,4B,gBCAlBsB,sBACXC,aAPkB,SAACC,GACnB,MAAO,CACHX,YAAaW,EAAMX,eAKE,CAACQ,kBADfC,CAGbX,I,0FCIaL,IAfM,SAAArB,GACjB,MAAsBwC,YAASxC,GAA/B,mBAAOyC,EAAP,KAAcC,EAAd,KACA,OACI,qCACI,cAAC,IAAD,uCAAWD,GAAWzC,GAAtB,IACOG,UAAWuC,EAAKC,SAAWD,EAAKE,MAAQxC,IAAOyC,WAAa,KAC5DtB,YAAavB,EAAMuB,YACnBD,UAAWtB,EAAMsB,UACjBG,KAAMzB,EAAMyB,QAEnB,cAAC,IAAD,CAAchB,KAAMgC,EAAMhC,KAAMN,UAAWC,IAAO0C,cAAexB,UAAU,a,mBCbvFzB,EAAOC,QAAU,CAAC,WAAa,2BAA2B,cAAgB","file":"static/js/5.1bb68d22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__pzdJq\",\"send_btn\":\"Dialogs_send_btn__1INFu\",\"messages\":\"Dialogs_messages__2R3I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__24CiW\",\"active\":\"Dialog_active__1h7aM\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./Dialog.module.css\";\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path} activeClassName={styles.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => <div className={styles.message}>{props.message}</div>;\r\n\r\nexport default Message;","import {Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport FieldElement from \"../../common/Fields/FieldElement\";\r\nimport styles from './Dialogs.module.css';\r\n\r\nconst DialogForm = props => {\r\n    const validate = Yup.object({\r\n        newMessageBody: Yup.string()\r\n            .max(50, 'Too Long!')\r\n    })\r\n    return (\r\n        <Formik initialValues={{newMessageBody: ''}} onSubmit={props.addNewMessage} validationSchema={validate}>\r\n            <Form>\r\n                <FieldElement name='newMessageBody' component='textarea' placeholder='Enter your message text'/>\r\n                <div>\r\n                    <button className={styles.send_btn} type='submit'>Send</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default DialogForm;\r\n","import React from 'react';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport styles from './Dialogs.module.css';\r\nimport DialogForm from \"./DialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <Dialog name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.Dialogs}>\r\n            <div>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <div className={styles.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    <DialogForm addNewMessage={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {sendMessage} from \"../../../redux/reducers/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n// import {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    // withAuthRedirect\r\n)(Dialogs);","import {ErrorMessage, Field, useField} from \"formik\";\r\nimport React from \"react\";\r\nimport styles from './Fields.module.css';\r\n\r\nconst FieldElement = props => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            <Field {...field} {...props}\r\n                   className={meta.touched && meta.error ? styles.is_invalid : null}\r\n                   placeholder={props.placeholder}\r\n                   component={props.component}\r\n                   type={props.type}\r\n            />\r\n            <ErrorMessage name={field.name} className={styles.error_message} component='div'/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FieldElement;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"is_invalid\":\"Fields_is_invalid__2daNH\",\"error_message\":\"Fields_error_message__1Foy8\"};"],"sourceRoot":""}